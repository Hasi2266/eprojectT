import java.io.File;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.TransformerFactoryConfigurationError;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class Q2 {
	
	/**
	 * this project will create XML file
	 * and give XML file as a console output
	 **/
	
	//create new documents
	public Document createDocument() throws ParserConfigurationException {
		Document document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();
		return document;
	}
	
	//create new elements
	public Element createElement(Document document, String elementName) {
		Element element = document.createElement(elementName);
		return element;
	}
	
	//create new attributes
	public Attr createAttribute(Document document, String attributeName) {
		Attr attribute = document.createAttribute(attributeName);
		return attribute;
	}
	
	//append child elements to parent elements
	public Element appendChild(Element parentElement, Element childElement) {
		parentElement.appendChild(childElement);
		return parentElement;
	}
	
	//set attributes to the element
	public Element setAttributeForElements(Element element, Attr attribute){
		element.setAttributeNode(attribute);
		return element;
	}
	
	public void transformToXml(String fileName) throws TransformerFactoryConfigurationError, TransformerException {
		
		//create new instance of transformer
		Transformer transformer = TransformerFactory.newInstance().newTransformer();
		//create new instance of DOMSource
		DOMSource domSource = new DOMSource();
		
		//transform as a XML file
		transformer.transform(domSource, new StreamResult(new File(fileName)));
		//Display XML file
		transformer.transform(domSource, new StreamResult(System.out));
	}
	
}
